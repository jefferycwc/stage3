/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package subscriberdatamanagement

import (
	"free5gc/lib/http_wrapper"
	"free5gc/lib/openapi/models"
	"free5gc/src/udm/logger"
	"free5gc/src/udm/handler"
	udm_message "free5gc/src/udm/handler/message"
	"net/http"

	"github.com/gin-gonic/gin"
)

// Subscribe - subscribe to notifications
func Subscribe(c *gin.Context) {

	var sdmSubscriptionReq models.SdmSubscription

	err := c.ShouldBindJSON(&sdmSubscriptionReq)
	if err != nil {
		problemDetail := "[Request Body] " + err.Error()
		rsp := models.ProblemDetails{
			Title:  "Malformed request syntax",
			Status: http.StatusBadRequest,
			Detail: problemDetail,
		}
		logger.SdmLog.Errorln(problemDetail)
		c.JSON(http.StatusBadRequest, rsp)
		return
	}

	req := http_wrapper.NewRequest(c.Request, sdmSubscriptionReq)
	req.Params["supi"] = c.Params.ByName("supi")
	req.Params["subscriptionId"] = c.Params.ByName("subscriptionId")

	handleMsg := udm_message.NewHandlerMessage(udm_message.EventSubscribe, req)
	handler.SendMessage(handleMsg)

	rsp := <-handleMsg.ResponseChan

	HTTPResponse := rsp.HTTPResponse

	c.JSON(HTTPResponse.Status, HTTPResponse.Body)

}
